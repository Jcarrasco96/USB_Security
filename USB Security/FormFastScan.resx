<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bwScanner.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="tipLabels.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>128, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        n/8DUe/Tws6OIcwAAAAASUVORK5CYII=
</value>
  </data>
</root>